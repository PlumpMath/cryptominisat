# branches to build
branches:
  # whitelist
  only:
    - master
    - appveyor_debug
    - multilevel_maple

# Operating system (build VM template)
os: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input


# clone directory
clone_folder: c:\projects\cryptominisat

platform:
  - x64
#  - x86

environment:
  global:
    #BOOST_ROOT: C:/Libraries/boost_1_59_0
    BOOST_ROOT: C:\projects\cryptominisat\boost_1_59_0_install
    BOOST_INCLUDEDIR: C:/Libraries/boost_1_59_0
    ZLIB_ROOT: C:/projects/cryptominisat/zlib/build/
    BUILD_TYPE: Release
    MSBUILD_FLAGS: /maxcpucount /nologo

configuration:
  - Release

build_script:
  - IF "%PLATFORM%" == "x86" ( SET BOOST_LIBRARYDIR=C:/Libraries/boost_1_59_0/lib32-msvc-14.0)
  - IF "%PLATFORM%" == "x86" ( SET CMAKE_GENERATOR="Visual Studio 14 2015")

  - IF "%PLATFORM%" == "x64" ( SET BOOST_LIBRARYDIR=C:/Libraries/boost_1_59_0/lib64-msvc-14.0)
  - IF "%PLATFORM%" == "x64" ( SET CMAKE_GENERATOR="Visual Studio 14 2015 Win64")

  - echo %PLATFORM%
  - echo %BOOST_LIBRARYDIR%
  - echo %CMAKE_GENERATOR%
  - echo %configuration%

  - echo %cd%
  - cd c:\projects\cryptominisat
  - mkdir boost_1_59_0_install

  - ps: . .\scripts\appveyor.ps1
  - cd boost_1_59_0
  - echo "Building boost.."
  - bootstrap.bat --with-libraries=program_options
  - b2 address-model=64 toolset=msvc-14.0 variant=release link=static threading=multi runtime-link=static
  - b2 install --prefix="C:\projects\cryptominisat\boost_1_59_0_install"

  # zlib
  - echo %APPVEYOR_BUILD_FOLDER%
  - cd c:\projects\cryptominisat
  - git clone https://github.com/madler/zlib
  - cd zlib
  - git checkout v1.2.8
  - echo %cd%
  - mkdir build
  - cd build
  - cmake -G %CMAKE_GENERATOR% -DCMAKE_INSTALL_PREFIX=. ..
  - if %PLATFORM%==x86 call msbuild %MSBUILD_FLAGS% /t:Build /p:Configuration=%CONFIGURATION% /p:Platform="x86" zlib.sln
  - if %PLATFORM%==x64 call msbuild %MSBUILD_FLAGS% /t:Build /p:Configuration=%CONFIGURATION% /p:Platform="x64" zlib.sln
  - msbuild %MSBUILD_FLAGS% INSTALL.vcxproj

  - echo Running cmake...
  - cd c:\projects\cryptominisat
  - git submodule update --init --recursive
  - mkdir build
  - cd build
  - cmake --version
  - cmake -G %CMAKE_GENERATOR% -DCMAKE_BUILD_TYPE=Release -DSTATICCOMPILE=ON ..
  - cmake --build . --config Release


build:
  # project: INSTALL.vcxproj      # path to Visual Studio solution or project
  parallel: true
  verbosity: detailed


# scripts to run after build
after_build:
  - 7z a c:\projects\cryptominisat\cryptominisat.zip %APPVEYOR_BUILD_FOLDER% -tzip
  - cd c:\projects\cryptominisat

artifacts:
  - path: cryptominisat.zip
    name: cryptominisat.zip

deploy_script:
  #- cd c:\projects\cryptominisat
  #- curl -T cryptominisat.zip --user %ACCOUNT% https://someplace/
